/*
 * Copyright 2018-2020 Digi International Inc.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/ {
	model = "Digi International ConnectCore 8X SBC Pro.";
	compatible = "digi,ccimx8x-sbc-pro", "digi,ccimx8x", "fsl,imx8qxp";
	digi,machine,name = "ccimx8x-sbc-pro";

	chosen {
		stdout-path = &lpuart2;
	};
	
	
	/*
	NOTE: USB3.x TypeC-MUX is NOT used with WICC!
	cbtl04gp {
		compatible = "nxp,cbtl04gp";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_typec_mux>;
		switch-gpios = <&lsio_gpio4 6 GPIO_ACTIVE_LOW>;
		orientation-switch;

		port {
			usb3_data_ss: endpoint {
				remote-endpoint = <&typec_con_ss>;
			};
		};
	};
	*/
	
	
	lvds_backlight0: lvds_backlight@0 {
		compatible = "pwm-backlight";
		pwms = <&pwm_mipi_lvds0 0 100000 0>;

		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
				     10 11 12 13 14 15 16 17 18 19
				     20 21 22 23 24 25 26 27 28 29
				     30 31 32 33 34 35 36 37 38 39
				     40 41 42 43 44 45 46 47 48 49
				     50 51 52 53 54 55 56 57 58 59
				     60 61 62 63 64 65 66 67 68 69
				     70 71 72 73 74 75 76 77 78 79
				     80 81 82 83 84 85 86 87 88 89
				     90 91 92 93 94 95 96 97 98 99
				    100>;
		default-brightness-level = <80>;
		//power-supply = <&reg_5v_display>;			// TODO: check it up - is this REQUIRED??
		status = "okay";
	};

	/* TODO: check parameters!! Needs adjustment for size, timings etc??? */
	lvds0_panel: lvds0_panel@0 {
		compatible = "panel-lvds";
		backlight = <&lvds_backlight0>;
		//power-supply = <&reg_5v_display>;
		width-mm = <216>;
		height-mm = <135>;
		data-mapping = "jeida-18";
		status = "okay";

		port {
			panel_lvds0_in: endpoint {
				remote-endpoint = <&lvds0_out>;
			};
		};

		/* TODO: set up corresponding to ELO-display!!  */
		panel-timing {
			clock-frequency = <68930000>;
			hactive = <1280>;
			vactive = <800>;
			hfront-porch = <120>;
			hback-porch = <0>;
			hsync-len = <8>;
			vback-porch = <10>;
			vfront-porch = <0>;
			vsync-len = <6>;
			hsync-active = <1>;
			vsync-active = <1>;
		};
	};


	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		/* PCIe mini card regulator, disabled by default */
		reg_3v3_pcie: regulator@6 {
			compatible = "regulator-fixed";
			reg = <6>;
			regulator-name = "vcc";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&piom1 15 GPIO_ACTIVE_HIGH>;       /* "LTE_PWR_ENABLE" signal on HV board --> GPB7 (=PIOM1.15) on MCP23018 GPIO-expander. */
			enable-active-high;
			startup-delay-us = <100000>;
		};

		reg_3v3_usb_hub: regulator@7 {
			compatible = "regulator-fixed";
			reg = <7>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_reg_3v3_usb_hub>;
			regulator-name = "3v3_usb_hub";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&lsio_gpio1 28 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			//vin-supply = <&reg_3v3_ext>;	// NOTE: no other 3.3V-supply than the main 3.3V - no regulator in-between!!
		};

	};

};


/*
 * FlexSPI port distributed among various interfaces.
 * Conflicts with:
 * - PCIE connector
 * - FEC1
 * - FEC2
 * - RS485
 * - CAN2
 * - MIPI camera
 * - HDMI display
 * - LVDS0 display touch controller
 * - LVDS1 display touch controller
 */
&flexspi0 {
	status = "disabled";	// TODO: check pinctrl-def!!
};



/* I2C3 connected to MCP23018 GPIO-expander. */
&i2c3 {
	#address-cells = <1>;
	#size-cells = <0>;
	clock-frequency = <100000>;                     /* TODO: assess - could possibly be raised to 400000??? */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpi2c3>;
	status = "disabled";
	
	/* Microchip MCP23018 16-bit GPIO-expander connected to I2C3 bus on address=0x27 ('ADDR'-pin connected to Vcc=3.3V --> effective address = 0x20 + 0x07) : */
	piom1: gpio@27 {
		compatible = "microchip,mcp23018";          /* REF: "Documentation/devicetree/bindings/pinctrl/pinctrl-mcp23s08.txt" in kernel source. */
		gpio-controller;
		#gpio-cells = <2>;                          /* NOTE: 2x GPIO-entities --> will end up as 'gpiochip10' and 'gpiochip11'. */
		reg = <0x27>;                               /* NOTE: I2C-addess of MCP23018 0x20 + <ADDR-pin setting>, with ADD-pin=Vcc=3.3V, this becomes 0x7 and addr = 0x20 + 0x7 = 0x27 */
		reset-gpios = <&lsio_gpio3 15 GPIO_ACTIVE_LOW>;  
		/*
		interrupt-parent = <&gpio1>;                NOTE: IRQs from MCP23018 are NOT used! (a.t.m.)
		interrupts = <17 IRQ_TYPE_LEVEL_LOW>;       This setting would mean GPIO1.17 were used as IRQ-input on i.MX8X.
		interrupt-controller;
		#interrupt-cells=<2>;                       2x IRQs from MCP23018 --> 'INTA' and 'INTB', one for each GPIO-bank respectively (GPIOA<n>, GPIOB<n>).
		microchip,irq-mirror;
		*/
		pinctrl-0 = <&gpio23018pullups>;
        	/* Pull-up on EVERY pin: */
        	gpio23018pullups: pinmux {
            	pins = "gpio0", "gpio1", "gpio2", "gpio3",
            	"gpio4", "gpio5", "gpio6", "gpio7",
            	"gpio8", "gpio9", "gpio10", "gpio11",
            	"gpio12", "gpio13", "gpio14", "gpio15";
            	bias-pull-up;
        	};
	};
};



/******************** Camera sensor co-processor ********************/

&isi_1 {
	interface = <2 0 2>;	/* INPUT: 2-MIPI CSI0 */
	cap_device {
		status = "okay";
	};
	m2m_device{
		compatible = "imx-isi-m2m";
		status = "okay";
	};
};

&isi_2 {
	interface = <2 0 2>;
	cap_device {
		status = "okay";
	};
};

&isi_3 {
	interface = <2 0 2>;
	cap_device {
		status = "okay";
	};
};


/***************************** MIPI-DSI serial display interface. NOTE: only DSI0 ('LVDS0') used!! *******************************/

&ldb1 {
	pinctrl-names = "default";
	//pinctrl-0 = <&pinctrl_lvds0>;     // NOTE: not used!!
	status = "disabled";

	lvds0: lvds-channel@0 {
		fsl,data-mapping = "jeida";
		fsl,data-width = <24>;
		digi,bits-per-pixel = <16>;
		status = "disabled";

		port@1 {
			reg = <1>;

			lvds0_out: endpoint {
				remote-endpoint = <&panel_lvds0_in>;
			};
		};
	};
};

&ldb1_phy {
	status = "disabled";
};

&mipi0_dsi_host {
	status = "disabled";

	ports {
		port@1 {
			reg = <1>;
			mipi0_dsi_out: endpoint {
				//remote-endpoint = <&lt8912_0_in>;	// NOTE: HDMI-adapter device --> NOT in use on WICC!! (TODO: check side-effects!)
			};
		};
	};
};


/********************************** Serial Interfaces (I2C, SPI, UART) **************************************/

/* LPSPI2 - used for Tricolor-LED: */
&lpspi2 {
	#address-cells = <1>;
	#size-cells = <0>;
	num-cs = <1>;
	//cs-gpios = <&lsio_gpio1 8 GPIO_ACTIVE_LOW>, <&lsio_gpio1 7 GPIO_ACTIVE_LOW>;	// TODO: check if NO 'cs-gpios' declared is LEGAL!!
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpspi2>;
	status = "disabled";
};


/* LPSPI3 - used for NFC: */
&lpspi3 {
	#address-cells = <1>;
	#size-cells = <0>;
	num-cs = <1>;
	//cs-gpios = <&lsio_gpio1 8 GPIO_ACTIVE_LOW>;	// TODO: check if this is to be used if DEDICATED 'ChipSelects' are used!!
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpspi3>;
	status = "disabled";
};


/* LPUART0 on expansion header */
&lpuart0 {
	/* RTS/CTS lines multiplexed with CAN0 */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpuart0_2wires>;	// NOTE: only TxD and RxD signals available!
	status = "disabled";
};


/* Console */
&lpuart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpuart2>;
	status = "disabled";
};


/* TODO: check WHY this is commented out!(???) */
/*&pd_dma_lpuart2 {
	debug_console;
};*/

&dc0_pc {
	status = "okay";
};

&dc0_prg1 {
	status = "okay";
};

&dc0_prg2 {
	status = "okay";
};

&dc0_prg3 {
	status = "okay";
};

&dc0_prg4 {
	status = "okay";
};

&dc0_prg5 {
	status = "okay";
};

&dc0_prg6 {
	status = "okay";
};

&dc0_prg7 {
	status = "okay";
};

&dc0_prg8 {
	status = "okay";
};

&dc0_prg9 {
	status = "okay";
};

/*
 * Remove MCA PWM node that uses MCA_IO5 and MCA_IO6 pads, since these lines
 * are being used as GPIOs for enabling voltage regulators on SBC Pro board.

// NOTE: NO regulators controlled by MCA-GPIOS in WICC!
// /delete-node/ &{/i2c@5a800000/mca@63/pwms/pwm@1};
*/


/* USB_OTG1 connected to usb hub */
&usbotg1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg1>;

	vbus-supply = <&reg_3v3_usb_hub>;                        // Supply goes through VREG-driver - so pin-controls need NOT be referred directly here! (i.e. 'pinctrl_reg_3v3_usb_hub')
	fsl,reset-gpio = <&lsio_gpio3 13 GPIO_ACTIVE_LOW>;       // GPIO3_13 = "USB_RESET" to hub --> was GPIO1_3 on BaseUnit.
	dr_mode = "host";                                        // NOTE: set to 'peripheral' if device-mode, or 'otg' if OTG-mode (i.e. dual-mode)!
	maximum-speed = "high-speed";                            // Typically NOT necessary to set ...
	disable-over-current;
	status = "okay";
};



/*********************** Micro SD card ********************************/
&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	bus-width = <4>;
	no-1-8-v;
	//cd-gpios = <&lsio_gpio4 22 GPIO_ACTIVE_HIGH>;   /* 'CardDetect' on USDHC1_CD_B is used for mPCIe-socket GPIO! */
	non-removable;                                    /* NOTE: SDcard-slot on BaseUnit has neither 'CD'-pin, nor a release-latch, and is to be considered 'non-removable'! */
	status = "disabled";
};

/* IOMUX - setup for peripherals. NOTE: do NOT mess up with pins which do NOT use IOMUXC-registers - e.g. GPIO-expander pins etc!! */
&iomuxc {
	/* SPI2 pin-muxing --> used for tricolor-LED control. (pinmux=2) NOTE: neither SDI-signal nor ChipSelects are available! */
	pinctrl_lpspi2: lpspi2grp {
		fsl,pins = <
			IMX8QXP_USDHC1_RESET_B_ADMA_SPI2_SCK	0x1600004c
			IMX8QXP_USDHC1_VSELECT_ADMA_SPI2_SDO	0x1600004c
		>;
	};
	
    /* SPI3 pin-multiplexing --> used for NFC-transceiver interfacing. pinmux=0 for all I/Os used. */
	pinctrl_lpspi3: lpspi3grp {
		fsl,pins = <
			IMX8QXP_SPI3_SCK_ADMA_SPI3_SCK	0x0600004c
			IMX8QXP_SPI3_SDO_ADMA_SPI3_SDO	0x0600004c
			IMX8QXP_SPI3_SDI_ADMA_SPI3_SDI	0x0600004c
			IMX8QXP_SPI3_CS0_ADMA_SPI3_CS0	0x0600004c	/* Dedicated CS-line --> no need to declare 'cs-gpio' property!(no???) */
		>;
	};
	
	pinctrl_lpuart0_2wires: lpuart0grp_2wires {
		fsl,pins = <
			IMX8QXP_UART0_TX_ADMA_UART0_TX		0x06000020	/* Pinmux = 0. */
			IMX8QXP_UART0_RX_ADMA_UART0_RX		0x06000020	/* Pinmux = 0. */
		>;
	};

	pinctrl_lpuart2: lpuart2grp {
		fsl,pins = <
			IMX8QXP_UART2_TX_ADMA_UART2_TX	0x06000020
			IMX8QXP_UART2_RX_ADMA_UART2_RX	0x06000020
		>;
	};

	pinctrl_lpi2c0: lpi2c0grp {
		fsl,pins = <
			IMX8QXP_MIPI_DSI0_I2C0_SCL_MIPI_DSI0_I2C0_SCL	0x06000020      /* pinmux=0 */
			IMX8QXP_MIPI_DSI0_I2C0_SDA_MIPI_DSI0_I2C0_SDA	0x06000020      /* pinmux=0 */
		>;
	};

	pinctrl_lpi2c3: lpi2c3grp {
		fsl,pins = <
			IMX8QXP_SPI3_CS1_ADMA_I2C3_SCL	0x06000020      /* TODO: check if pinmux=0 (as used here) is correct!! Should be pinmux=1 ??? */
			IMX8QXP_MCLK_IN1_ADMA_I2C3_SDA	0x06000020      /* TODO: check if pinmux=0 (as used here) is correct!! Should be pinmux=1 ??? */
		>;
	};

	/* PCIE (Mini Card) --> nDISABLE = IMX8QXP_MIPI_DSI1_GPIO0_01_LSIO_GPIO2_IO00  w. IOMUX=0x26000060 */
	pinctrl_pcieb_mini_card: pcieagrp_mini_card {
		fsl,pins = <
			/* PCIE_RESET_N */
			IMX8QXP_USDHC1_WP_LSIO_GPIO4_IO21		0x26000021    /* GPIO4_21 in ALT4-mode --> unchanged from BaseUnit design. */
			/* PCIE_DIS_N */
			IMX8QXP_MIPI_DSI1_GPIO0_01_LSIO_GPIO2_IO00	0x26000021     /* Was: 0x26000061. GPIO2_0 in ALT4-mode --> unchanged from BaseUnit design. */
			/* PCIE_WAKE_N --> */
			IMX8QXP_SCU_GPIO0_01_SCU_GPIO0_IO01		0x04000021     /* GPIO0_1 in ALT0-mode --> unchanged from BaseUnit design. */
		>;
	};

	/* TODO: check if vreg for PCIe is used at all! (WiFi internally??) */
	pinctrl_reg_3v3_pcie: reg_3v3_pcie_grp {
		/* Used to be GPIO4_22 - but this is used for 'NFC_IRQ_IN' signal. */
		pins = <&piom1 15 GPIO_ACTIVE_HIGH>;   /* Instead use GPIO-expander pin GPB7 = IO10_15 --> active HIGH */
	};


	pinctrl_reg_3v3_pcie_sleep: reg_3v3_pcie_sleep_grp {
		/* Used to be GPIO4_22 (with different PAD-setting) - but this is used for 'NFC_IRQ_IN' signal. */
		pins = <&piom1 15 GPIO_ACTIVE_LOW>;   /* Instead use GPIO-expander pin GPB7 = IO10_15--> active LOW */
	};

    /******************** USB (USBOTG1) ***********************/
    
	pinctrl_reg_3v3_usb_hub: reg_3v3_usb_hub_grp {
		fsl,pins = <
			/* GPIO1_28 (MUX=ALT4) is USB hub power enable, 'USB_EN' (= 'USB_PWR_EN') */
			IMX8QXP_MIPI_DSI0_GPIO0_01_LSIO_GPIO1_IO28		0x26000020              
		>;
	};

	pinctrl_usbotg1: usbotg1grp {
		fsl,pins = <
			/* USB hub reset (MUX=ALT4) is GPIO3_13. */
			IMX8QXP_QSPI0A_DQS_LSIO_GPIO3_IO13		0x26000020
		>;
	};

	pinctrl_usdhc2_gpio: usdhc2gpiogrp {
		fsl,pins = <
			/* Card detect */
			// IMX8QXP_USDHC1_CD_B_LSIO_GPIO4_IO22	0x06000021     /* NOTE: CardDetect is NOT used for BaseUnit SDcard-slot! (and GPIO is used for PCIe_ENABLE-signal) */
		>;
	};

    /* USDHC2 controller instance = internal eMMC --> so 'pinctrl_usdhc2(_nnn)' here is actually a misnomer! Below is pin-ctrl for the USDHC1 controller, but it's the second SDHC driver-instance. */
	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			IMX8QXP_USDHC1_CLK_CONN_USDHC1_CLK		0x06000041
			IMX8QXP_USDHC1_CMD_CONN_USDHC1_CMD		0x00000021
			IMX8QXP_USDHC1_DATA0_CONN_USDHC1_DATA0	0x00000021
			IMX8QXP_USDHC1_DATA1_CONN_USDHC1_DATA1	0x00000021
			IMX8QXP_USDHC1_DATA2_CONN_USDHC1_DATA2	0x00000021
			IMX8QXP_USDHC1_DATA3_CONN_USDHC1_DATA3	0x00000021
		>;
	};

    /* NOTE: all thre configs are identical below, but sometimes 50MHz-config is different from 100MHz, 200MHz etc. */
	pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
		fsl,pins = <
			IMX8QXP_USDHC1_CLK_CONN_USDHC1_CLK		0x06000041
			IMX8QXP_USDHC1_CMD_CONN_USDHC1_CMD		0x00000021
			IMX8QXP_USDHC1_DATA0_CONN_USDHC1_DATA0	0x00000021
			IMX8QXP_USDHC1_DATA1_CONN_USDHC1_DATA1	0x00000021
			IMX8QXP_USDHC1_DATA2_CONN_USDHC1_DATA2	0x00000021
			IMX8QXP_USDHC1_DATA3_CONN_USDHC1_DATA3	0x00000021
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
		fsl,pins = <
			IMX8QXP_USDHC1_CLK_CONN_USDHC1_CLK		0x06000041
			IMX8QXP_USDHC1_CMD_CONN_USDHC1_CMD		0x00000021
			IMX8QXP_USDHC1_DATA0_CONN_USDHC1_DATA0	0x00000021
			IMX8QXP_USDHC1_DATA1_CONN_USDHC1_DATA1	0x00000021
			IMX8QXP_USDHC1_DATA2_CONN_USDHC1_DATA2	0x00000021
			IMX8QXP_USDHC1_DATA3_CONN_USDHC1_DATA3	0x00000021
		>;
	};

};



